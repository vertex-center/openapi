openapi: 3.0.0
info:
    title: Vertex
    description: A platform to manage your self-hosted server.
    version: 0.0.0
servers:
    - url: http://{ip}:{port}/api
      variables:
        ip:
            default: localhost
            description: The IP address of the server.
        port:
            default: "6130"
            description: The port of the server.
paths:
    /admin/checks:
        get:
            operationId: admin_checks
            summary: Get all checks
            tags:
                - Admin/Checks
            description: Check that all vertex requirements are met.
            responses:
                "200":
                    $ref: '#/components/responses/200'
    /admin/db/dbms:
        get:
            operationId: get_current_dbms
            summary: Get the current DBMS
            tags:
                - Admin/Data
            description: Get the current database management system that Vertex is using.
            responses:
                "200":
                    description: The current DBMS.
                    content:
                        application/json:
                            schema:
                                type: string
        post:
            operationId: migrate_to_dbms
            summary: Migrate to a DBMS
            tags:
                - Admin/Data
            description: Migrate Vertex to the given database management system.
            requestBody:
                description: The DBMS to migrate to.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MigrateToBody'
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "304":
                    $ref: '#/components/responses/304'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /admin/settings:
        get:
            operationId: get_settings
            summary: Get settings
            tags:
                - Settings
            responses:
                "200":
                    description: The settings.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Settings'
                "500":
                    $ref: '#/components/responses/500'
        patch:
            operationId: patch_settings
            summary: Patch settings
            tags:
                - Settings
            requestBody:
                description: The settings to update.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Settings'
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /admin/update:
        get:
            operationId: get_updates
            summary: Get the latest version info
            tags:
                - Updates
            responses:
                "200":
                    description: The latest version information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Update'
                "500":
                    $ref: '#/components/responses/500'
        post:
            operationId: install_update
            summary: Install the latest version
            tags:
                - Updates
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /app/auth/login:
        post:
            operationId: auth_login
            summary: Login
            tags:
                - Authentication
            responses:
                "200":
                    description: The auth token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Token'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /app/auth/logout:
        post:
            operationId: auth_logout
            summary: Logout
            tags:
                - Authentication
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "500":
                    $ref: '#/components/responses/500'
    /app/auth/register:
        post:
            responses: {}
    /app/auth/user:
        get:
            operationId: auth_get_current_user
            summary: Get user
            tags:
                - Authentication/Users
            responses:
                "200":
                    description: The user
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}:
        delete:
            operationId: vx_containers_delete_container
            summary: Delete a container
            tags:
                - Apps/Containers
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    description: The container is still running.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    $ref: '#/components/responses/500'
        get:
            operationId: vx_containers_get_container
            summary: Get a container
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The container.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
        patch:
            operationId: vx_containers_patch_container
            summary: Patch a container
            tags:
                - Apps/Containers
            requestBody:
                description: The container patch.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PatchBody'
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/docker:
        get:
            operationId: vx_containers_get_docker
            summary: Get Docker container info
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The Docker container info.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DockerContainerInfo'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/docker/recreate:
        post:
            operationId: vx_containers_recreate_docker
            summary: Recreate Docker container
            tags:
                - Apps/Containers
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/environment:
        patch:
            operationId: vx_containers_patch_environment
            summary: Patch a container environment
            tags:
                - Apps/Containers
            requestBody:
                description: The environment variables to set.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PatchEnvironmentBody'
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/events:
        get:
            operationId: vx_containers_events_container
            summary: Get container events
            tags:
                - Apps/Containers
            description: Get events for a container, sent as Server-Sent Events (SSE).
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/logs:
        get:
            operationId: vx_containers_get_logs
            summary: Get container logs
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The logs.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/LogLine'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/start:
        post:
            operationId: vx_containers_start_container
            summary: Start a container
            tags:
                - Apps/Containers
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    description: The container is already running.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/stop:
        post:
            operationId: vx_containers_stop_container
            summary: Stop a container
            tags:
                - Apps/Containers
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "409":
                    description: The container is not running.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/update/service:
        post:
            operationId: vx_containers_update_service
            summary: Update service
            tags:
                - Apps/Containers
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/versions:
        get:
            operationId: vx_containers_get_versions
            summary: Get container versions
            tags:
                - Apps/Containers
            parameters:
                - in: query
                  name: reload
                  description: Whether to reload the versions from the registry or use the cache.
                  required: true
                  schema:
                    type: boolean
            responses:
                "200":
                    description: The versions.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/container/{container_uuid}/wait:
        get:
            operationId: vx_containers_wait_status
            summary: Wait for a status change
            tags:
                - Apps/Containers
            parameters:
                - in: query
                  name: status
                  description: The status to wait for.
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/containers:
        get:
            operationId: vx_containers_get_containers
            summary: Get containers
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The containers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Container'
    /app/containers/containers/checkupdates:
        get:
            operationId: vx_containers_check_updates
            summary: Check for updates
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The containers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Container'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/containers/events:
        get:
            operationId: vx_containers_events
            summary: Get events
            tags:
                - Apps/Containers
            description: Get events for containers, sent as Server-Sent Events (SSE).
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/containers/search:
        get:
            operationId: vx_containers_search
            summary: Search containers
            tags:
                - Apps/Containers
            parameters:
                - in: query
                  name: features
                  description: The features.
                  required: true
                  schema:
                    type: array
                    items:
                        type: string
                - in: query
                  name: tags
                  description: The tags.
                  required: true
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: The containers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Container'
    /app/containers/containers/tags:
        get:
            operationId: vx_containers_get_tags
            summary: Get tags
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The tags.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /app/containers/service/{service_id}:
        get:
            operationId: vx_containers_get_service
            summary: Get service
            tags:
                - Apps/Containers
            parameters:
                - in: query
                  name: service_id
                  description: The service ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The service.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
    /app/containers/service/{service_id}/install:
        post:
            operationId: vx_containers_install_service
            summary: Install a service
            tags:
                - Apps/Containers
            parameters:
                - in: query
                  name: service_id
                  description: The service ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The container.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/containers/services:
        get:
            operationId: vx_containers_get_services
            summary: Get services
            tags:
                - Apps/Containers
            responses:
                "200":
                    description: The services.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Service'
    /app/devtools-service-editor/editor/to-yaml:
        post:
            operationId: vx_devtools_service_editor_to_yaml
            summary: Convert service to yaml
            tags:
                - Apps/Service Editor
            description: Convert service description to a reusable yaml file.
            requestBody:
                description: The service to convert.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Service'
            responses:
                "200":
                    description: The yaml file.
                    content:
                        application/json:
                            schema:
                                type: string
                "400":
                    $ref: '#/components/responses/400'
    /app/monitoring/collector/{collector}/install:
        post:
            operationId: vx_monitoring_install_collector
            summary: Install a collector
            tags:
                - Apps/Monitoring
            parameters:
                - in: query
                  name: collector
                  description: The collector to install.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/monitoring/metrics:
        get:
            operationId: vx_monitoring_get_metrics
            summary: Get metrics
            tags:
                - Apps/Monitoring
            responses:
                "200":
                    description: The metrics.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Metrics'
    /app/monitoring/visualizer/{visualizer}/install:
        post:
            operationId: vx_monitoring_install_visualizer
            summary: Install a visualizer
            tags:
                - Apps/Monitoring
            parameters:
                - in: query
                  name: visualizer
                  description: The visualizer to install.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/reverse-proxy/redirect:
        post:
            operationId: vx_reverse_proxy_add_redirect
            summary: Add redirect
            tags:
                - Apps/Reverse Proxy
            requestBody:
                description: The redirect to add.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRedirectBody'
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /app/reverse-proxy/redirect/{id}:
        delete:
            operationId: vx_reverse_proxy_remove_redirect
            summary: Remove redirect
            tags:
                - Apps/Reverse Proxy
            parameters:
                - in: query
                  name: id
                  description: The redirect UUID.
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /app/reverse-proxy/redirects:
        get:
            operationId: vx_reverse_proxy_get_redirects
            summary: Get redirects
            tags:
                - Apps/Reverse Proxy
            responses:
                "200":
                    description: The redirects.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Redirect'
    /app/sql/container/{container_uuid}:
        get:
            operationId: vx_sql_get_dbms
            summary: Get an installed DBMS
            tags:
                - Apps/SQL
            parameters:
                - in: query
                  name: container_uuid
                  description: The UUID of the container hosting the database.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The DBMS.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DBMS'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/sql/dbms/{dbms}/install:
        post:
            operationId: vx_sql_install_dbms
            summary: Install a DBMS
            tags:
                - Apps/SQL
            parameters:
                - in: query
                  name: dbms
                  description: The DBMS to install.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The installed DBMS.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/tunnels/provider/{provider}/install:
        post:
            operationId: vx_tunnels_install_provider
            summary: Install a tunnel provider
            tags:
                - Apps/Tunnels
            parameters:
                - in: query
                  name: provider
                  description: The provider to install.
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "500":
                    $ref: '#/components/responses/500'
    /apps:
        get:
            operationId: get_apps
            summary: Get all apps
            tags:
                - Apps
            responses:
                "200":
                    description: The list of apps.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Meta'
    /debug/hard-reset:
        post:
            operationId: hard_reset
            summary: Hard reset
            tags:
                - Debug
            description: This route allows deleting all the server data, which can be useful for debugging purposes.
            responses:
                "204":
                    $ref: '#/components/responses/204'
    /hardware/cpus:
        get:
            operationId: get_cpus
            summary: Get CPUs
            tags:
                - Hardware
            responses:
                "200":
                    description: The CPUs information.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/CPU'
                "500":
                    $ref: '#/components/responses/500'
    /hardware/host:
        get:
            operationId: get_host
            summary: Get host
            tags:
                - Hardware
            responses:
                "200":
                    description: The host information.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Host'
                "500":
                    $ref: '#/components/responses/500'
    /security/ssh:
        delete:
            operationId: delete_ssh_key
            summary: Delete SSH key
            tags:
                - Ssh
            parameters:
                - in: query
                  name: fingerprint
                  description: The fingerprint of the SSH key to delete.
                  required: true
                  schema:
                    $ref: '#/components/schemas/DeleteSSHKeyBody'
            responses:
                "204":
                    $ref: '#/components/responses/204'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
        get:
            operationId: get_ssh_keys
            summary: Get all SSH keys
            tags:
                - Ssh
            responses:
                "200":
                    description: The list of SSH keys.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/PublicKey'
                "500":
                    $ref: '#/components/responses/500'
        post:
            operationId: add_ssh_key
            summary: Add an SSH key
            tags:
                - Ssh
            requestBody:
                description: The SSH key to add.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddSSHKeyBody'
            responses:
                "201":
                    $ref: '#/components/responses/201'
                "400":
                    $ref: '#/components/responses/400'
                "500":
                    $ref: '#/components/responses/500'
    /security/ssh/users:
        get:
            operationId: get_ssh_users
            summary: Get all users that can have SSH keys
            tags:
                - Ssh
            responses:
                "200":
                    description: The list of users.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                "500":
                    $ref: '#/components/responses/500'
components:
    responses:
        "200":
            description: Success
        "201":
            description: Created
        "204":
            description: No content
        "304":
            description: Not modified
        "400":
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "401":
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "404":
            description: Resource not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "409":
            description: Conflict
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "422":
            description: Unprocessable entity
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "500":
            description: Internal error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
    schemas:
        AddRedirectBody:
            type: object
            properties:
                source:
                    type: string
                target:
                    type: string
        AddSSHKeyBody:
            type: object
            properties:
                authorized_key:
                    type: string
                username:
                    type: string
        Baseline:
            type: object
            properties:
                date:
                    type: string
                description:
                    type: string
                version:
                    type: string
                vertex:
                    type: string
                vertex_client:
                    type: string
                vertex_services:
                    type: string
        CPU:
            type: object
            properties:
                cache_size:
                    type: int32
                core_id:
                    type: string
                cores_count:
                    type: int32
                count:
                    type: int32
                family:
                    type: string
                flags:
                    type: array
                    items:
                        type: string
                mhz:
                    type: float64
                microcode:
                    type: string
                model:
                    type: string
                model_name:
                    type: string
                physical_id:
                    type: string
                stepping:
                    type: int32
                vendor_id:
                    type: string
        Container:
            type: object
            properties:
                cache_versions:
                    type: array
                    items:
                        type: string
                environment:
                    $ref: '#/components/schemas/ContainerEnvVariables'
                service:
                    $ref: '#/components/schemas/Service'
                service_update:
                    $ref: '#/components/schemas/ServiceUpdate'
                status:
                    type: string
                update:
                    $ref: '#/components/schemas/ContainerUpdate'
                uuid:
                    $ref: '#/components/schemas/UUID'
        ContainerEnvVariables:
            type: object
            anyOf:
                - type: string
        ContainerUpdate:
            type: object
            properties:
                current_version:
                    type: string
                latest_version:
                    type: string
        DB:
            type: object
        DBMS:
            type: object
            properties:
                databases:
                    type: array
                    items:
                        $ref: '#/components/schemas/DB'
                password:
                    type: string
                username:
                    type: string
        DeleteSSHKeyBody:
            type: object
            properties:
                fingerprint:
                    type: string
                username:
                    type: string
        DockerContainerInfo:
            type: object
            anyOf:
                - type: object
        ErrCode:
            type: string
        Error:
            type: object
            properties:
                code:
                    $ref: '#/components/schemas/ErrCode'
                message:
                    type: string
        Host:
            type: object
            properties:
                boot_time:
                    type: uint64
                host_id:
                    type: string
                hostname:
                    type: string
                kernel_arch:
                    type: string
                kernel_version:
                    type: string
                os:
                    type: string
                platform:
                    type: string
                platform_family:
                    type: string
                platform_version:
                    type: string
                procs:
                    type: uint64
                uptime:
                    type: uint64
                virtualization_role:
                    type: string
                virtualization_system:
                    type: string
        LogLine:
            type: object
            properties:
                id:
                    type: int
                kind:
                    type: string
                message:
                    $ref: '#/components/schemas/LogLineMessage'
        LogLineMessage:
            type: string
        Meta:
            type: object
            properties:
                category:
                    type: string
                description:
                    type: string
                hidden:
                    type: boolean
                icon:
                    type: string
                id:
                    type: string
                name:
                    type: string
        Metrics:
            type: string
        MigrateToBody:
            type: object
            properties:
                dbms:
                    type: string
        PatchBody:
            type: object
            properties:
                databases:
                    $ref: '#/components/schemas/object'
                display_name:
                    type: string
                launch_on_startup:
                    type: boolean
                tags:
                    type: array
                    items:
                        type: string
                version:
                    type: string
        PatchEnvironmentBody:
            type: object
            anyOf:
                - type: string
        PublicKey:
            type: object
            properties:
                fingerprint_sha_256:
                    type: string
                type:
                    type: string
                username:
                    type: string
        Redirect:
            type: string
        Service:
            type: object
        ServiceUpdate:
            type: object
            properties:
                available:
                    type: boolean
        Settings:
            type: string
        Token:
            type: string
        UUID:
            type: string
        Update:
            type: object
            properties:
                baseline:
                    $ref: '#/components/schemas/Baseline'
                updating:
                    type: boolean
        User:
            type: object
        object:
            type: string

openapi: 3.0.0
info:
    title: Vertex SQL
    description: A SQL database manager.
    version: 0.0.0
servers:
    - url: http://{ip}:{port-kernel}/api
      variables:
        ip:
            default: localhost
            description: The IP address of the server.
        port-kernel:
            default: "7512"
            description: The port of the server.
paths:
    /app/sql/container/{container_uuid}:
        get:
            operationId: vx_sql_get_dbms
            summary: Get an installed DBMS
            tags:
                - SQL
            parameters:
                - in: query
                  name: container_uuid
                  description: The UUID of the container hosting the database.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The DBMS.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DBMS'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /app/sql/dbms/{dbms}/install:
        post:
            operationId: vx_sql_install_dbms
            summary: Install a DBMS
            tags:
                - SQL
            parameters:
                - in: query
                  name: dbms
                  description: The DBMS to install.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The installed DBMS.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                "400":
                    $ref: '#/components/responses/400'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
components:
    responses:
        "200":
            description: Success
        "201":
            description: Created
        "204":
            description: No content
        "304":
            description: Not modified
        "400":
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "401":
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "404":
            description: Resource not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "409":
            description: Conflict
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "422":
            description: Unprocessable entity
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "500":
            description: Internal error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
    schemas:
        Container:
            type: object
            properties:
                cache_versions:
                    type: array
                    items:
                        type: string
                environment:
                    $ref: '#/components/schemas/ContainerEnvVariables'
                service:
                    $ref: '#/components/schemas/Service'
                service_update:
                    $ref: '#/components/schemas/ServiceUpdate'
                status:
                    type: string
                update:
                    $ref: '#/components/schemas/ContainerUpdate'
                uuid:
                    $ref: '#/components/schemas/UUID'
        ContainerEnvVariables:
            type: object
            anyOf:
                - type: string
        ContainerUpdate:
            type: object
            properties:
                current_version:
                    type: string
                latest_version:
                    type: string
        DB:
            type: object
        DBMS:
            type: object
            properties:
                databases:
                    type: array
                    items:
                        $ref: '#/components/schemas/DB'
                password:
                    type: string
                username:
                    type: string
        ErrCode:
            type: string
        Error:
            type: object
            properties:
                code:
                    $ref: '#/components/schemas/ErrCode'
                message:
                    type: string
        Service:
            type: object
        ServiceUpdate:
            type: object
            properties:
                available:
                    type: boolean
        UUID:
            type: string

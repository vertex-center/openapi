openapi: 3.0.1
info:
    title: Vertex Service Editor
    description: Create services for publishing.
    version: ""
paths:
    /api/about:
        get:
            summary: Get server info
            operationId: getAbout
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommonAbout'
    /api/editor/to-yaml:
        post:
            tags:
                - Editor
            summary: Convert service to yaml
            description: Convert service description to a reusable yaml file.
            operationId: toYaml
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ToYamlInput'
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: string
                                format: byte
    /api/ping:
        get:
            summary: Ping the app
            operationId: ping
            responses:
                "204":
                    description: No Content
components:
    schemas:
        CommonAbout:
            type: object
            properties:
                arch:
                    type: string
                    example: amd64
                commit:
                    type: string
                    example: cd4ba2876f45775287f426c13adb1868f7c96222
                date:
                    type: string
                    example: 2006-01-02T15:04:05Z07:00
                os:
                    type: string
                    example: linux
                version:
                    type: string
                    example: 1.2.3
        ToYamlInput:
            type: object
            properties:
                color:
                    type: string
                    example: '#f38ba8'
                    nullable: true
                databases:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/TypesDatabaseEnvironment'
                description:
                    type: string
                    example: The authentication service of Vertex.
                environment:
                    type: array
                    items:
                        $ref: '#/components/schemas/TypesServiceEnv'
                features:
                    $ref: '#/components/schemas/TypesFeatures'
                icon:
                    type: string
                    example: vertex.svg
                    nullable: true
                id:
                    type: string
                    example: vertex-auth
                methods:
                    $ref: '#/components/schemas/TypesServiceMethods'
                name:
                    type: string
                    example: Vertex Auth
                repository:
                    type: string
                    example: https://github.com/vertex-center/vertex
                    nullable: true
                urls:
                    type: array
                    items:
                        $ref: '#/components/schemas/TypesURL'
                version:
                    type: integer
                    format: int32
                    example: 2
        TypesDatabaseEnvironment:
            type: object
            properties:
                display_name:
                    type: string
                names:
                    $ref: '#/components/schemas/TypesDatabaseEnvironmentNames'
                types:
                    type: array
                    items:
                        type: string
        TypesDatabaseEnvironmentNames:
            type: object
            properties:
                database:
                    type: string
                host:
                    type: string
                password:
                    type: string
                port:
                    type: string
                username:
                    type: string
        TypesDatabaseFeature:
            type: object
            properties:
                category:
                    type: string
                    example: sql
                database_default:
                    type: string
                    example: postgres
                    nullable: true
                password:
                    type: string
                    example: postgres
                    nullable: true
                port:
                    type: string
                    example: "5432"
                type:
                    type: string
                    example: postgres
                username:
                    type: string
                    example: postgres
                    nullable: true
        TypesFeatures:
            type: object
            properties:
                databases:
                    type: array
                    items:
                        $ref: '#/components/schemas/TypesDatabaseFeature'
        TypesServiceClone:
            type: object
            properties:
                repository:
                    type: string
                    example: https://github.com/vertex-center/vertex
        TypesServiceEnv:
            type: object
            properties:
                default:
                    type: string
                    example: "8080"
                description:
                    type: string
                    example: The port where the server will listen.
                display_name:
                    type: string
                    example: Server Port
                name:
                    type: string
                    example: PORT
                secret:
                    type: boolean
                    example: false
                    nullable: true
                type:
                    type: string
                    example: port
        TypesServiceMethodDocker:
            type: object
            properties:
                capabilities:
                    type: array
                    items:
                        type: string
                clone:
                    $ref: '#/components/schemas/TypesServiceClone'
                command:
                    type: string
                    nullable: true
                dockerfile:
                    type: string
                    example: Dockerfile
                    nullable: true
                environment:
                    type: object
                    additionalProperties:
                        type: string
                image:
                    type: string
                    example: ghcr.io/vertex-center/vertex
                    nullable: true
                ports:
                    type: object
                    additionalProperties:
                        type: string
                sysctls:
                    type: object
                    additionalProperties:
                        type: string
                volumes:
                    type: object
                    additionalProperties:
                        type: string
        TypesServiceMethods:
            type: object
            properties:
                docker:
                    $ref: '#/components/schemas/TypesServiceMethodDocker'
        TypesURL:
            type: object
            properties:
                home:
                    type: string
                    example: /home
                    nullable: true
                kind:
                    type: string
                    enum:
                        - client
                        - server
                name:
                    type: string
                    example: Vertex Client
                ping:
                    type: string
                    example: /ping
                    nullable: true
                port:
                    type: string
                    example: "3000"
tags:
    - name: Editor
      description: Service editor routes

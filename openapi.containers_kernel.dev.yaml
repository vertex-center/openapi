openapi: 3.0.0
info:
    title: Vertex Containers Kernel
    description: An app to manage Docker containers.
    version: 0.0.0
servers:
    - url: http://{ip}:{port-kernel}/api
      variables:
        ip:
            default: localhost
            description: The IP address of the server.
        port-kernel:
            default: "7505"
            description: The port of the server.
paths:
    /docker/containers:
        get:
            operationId: vx_containers_kernel_get_containers
            summary: Get containers
            tags:
                - Containers
            responses:
                "200":
                    description: The containers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Container'
                "500":
                    $ref: '#/components/responses/500'
        post:
            operationId: vx_containers_kernel_create_container
            summary: Create container
            tags:
                - Containers
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/reateContainerOption'
            responses:
                "200":
                    description: The container.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Container'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}:
        delete:
            operationId: vx_containers_kernel_delete_container
            summary: Delete container
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "404":
                    $ref: '#/components/responses/404'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}/info:
        "":
            responses: {}
    /docker/containers/{id}/logs/stderr:
        get:
            operationId: vx_containers_kernel_logs_stderr_container
            summary: Get container stderr logs
            tags:
                - Containers
            description: Get container stderr logs as a stream.
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}/logs/stdout:
        get:
            operationId: vx_containers_kernel_logs_stdout_container
            summary: Get container stdout logs
            tags:
                - Containers
            description: Get container stdout logs as a stream.
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}/start:
        post:
            operationId: vx_containers_kernel_start_container
            summary: Start container
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}/stop:
        post:
            operationId: vx_containers_kernel_stop_container
            summary: Stop container
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/{id}/wait/{cond}:
        get:
            operationId: vx_containers_kernel_wait_container
            summary: Wait container
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The container id.
                  required: true
                  schema:
                    type: string
                - in: query
                  name: cond
                  description: The condition to wait for.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/containers/mounts/{id}:
        delete:
            operationId: vx_containers_kernel_delete_mounts
            summary: Delete mounts
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The container uuid.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/image/{id}/info:
        get:
            operationId: vx_containers_kernel_info_image
            summary: Get image info
            tags:
                - Containers
            parameters:
                - in: query
                  name: id
                  description: The image id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: The image.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InfoImageResponse'
                "500":
                    $ref: '#/components/responses/500'
    /docker/image/build:
        post:
            operationId: vx_containers_kernel_build_image
            summary: Build image
            tags:
                - Containers
            description: Build an image from a Dockerfile. The response is a stream of the logs.
            requestBody:
                description: The options to build the image.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BuildImageOptions'
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
    /docker/image/pull:
        post:
            operationId: vx_containers_kernel_pull_image
            summary: Pull image
            tags:
                - Containers
            description: Pull an image from a registry. The response is a stream of the logs.
            requestBody:
                description: The options to pull the image.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PullImageOptions'
            responses:
                "200":
                    $ref: '#/components/responses/200'
                "500":
                    $ref: '#/components/responses/500'
components:
    responses:
        "200":
            description: Success
        "201":
            description: Created
        "204":
            description: No content
        "304":
            description: Not modified
        "400":
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "401":
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "404":
            description: Resource not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "409":
            description: Conflict
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "422":
            description: Unprocessable entity
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        "500":
            description: Internal error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
    schemas:
        BuildImageOptions:
            type: object
            properties:
                dir:
                    type: string
                dockerfile:
                    type: string
                name:
                    type: string
        Container:
            type: object
            properties:
                cache_versions:
                    type: array
                    items:
                        type: string
                environment:
                    $ref: '#/components/schemas/ContainerEnvVariables'
                service:
                    $ref: '#/components/schemas/Service'
                service_update:
                    $ref: '#/components/schemas/ServiceUpdate'
                status:
                    type: string
                update:
                    $ref: '#/components/schemas/ContainerUpdate'
                uuid:
                    $ref: '#/components/schemas/UUID'
        ContainerEnvVariables:
            type: object
            anyOf:
                - type: string
        ContainerUpdate:
            type: object
            properties:
                current_version:
                    type: string
                latest_version:
                    type: string
        ErrCode:
            type: string
        Error:
            type: object
            properties:
                code:
                    $ref: '#/components/schemas/ErrCode'
                message:
                    type: string
        InfoImageResponse:
            type: object
            properties:
                architecture:
                    type: string
                id:
                    type: string
                os:
                    type: string
                size:
                    type: int64
                tags:
                    type: array
                    items:
                        type: string
        PullImageOptions:
            type: object
            properties:
                image:
                    type: string
        Service:
            type: object
        ServiceUpdate:
            type: object
            properties:
                available:
                    type: boolean
        UUID:
            type: string
        reateContainerOption:
            type: string
